// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UknfCommunicationPlatform.Infrastructure.Data;

#nullable disable

namespace UknfCommunicationPlatform.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UknfCommunicationPlatform.Core.Entities.Message", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsRead")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ReadAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("RecipientId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RelatedEntityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RelatedReportId")
                        .HasColumnType("bigint");

                    b.Property<long>("SenderId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.HasIndex("RecipientId");

                    b.HasIndex("SenderId");

                    b.ToTable("messages", (string)null);
                });

            modelBuilder.Entity("UknfCommunicationPlatform.Core.Entities.Report", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("text");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsCorrection")
                        .HasColumnType("boolean");

                    b.Property<long?>("OriginalReportId")
                        .HasColumnType("bigint");

                    b.Property<string>("ReportNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ReportType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReportingPeriod")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("SubmittedByUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("SupervisedEntityId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ValidatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ValidationResultPath")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OriginalReportId");

                    b.HasIndex("ReportNumber")
                        .IsUnique();

                    b.HasIndex("SubmittedByUserId");

                    b.HasIndex("SupervisedEntityId");

                    b.ToTable("reports", (string)null);
                });

            modelBuilder.Entity("UknfCommunicationPlatform.Core.Entities.SupervisedEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ApartmentNumber")
                        .HasColumnType("text");

                    b.Property<string>("BuildingNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("EntityType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsCrossBorder")
                        .HasColumnType("boolean");

                    b.Property<string>("KRS")
                        .HasColumnType("text");

                    b.Property<string>("LEI")
                        .HasColumnType("text");

                    b.Property<string>("NIP")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RegistryNumber")
                        .HasColumnType("text");

                    b.Property<string>("Sector")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Subsector")
                        .HasColumnType("text");

                    b.Property<string>("UKNFCode")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("UKNFCode")
                        .IsUnique();

                    b.ToTable("supervised_entities", (string)null);
                });

            modelBuilder.Entity("UknfCommunicationPlatform.Core.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("PESEL")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<long?>("SupervisedEntityId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("SupervisedEntityId");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("UknfCommunicationPlatform.Core.Entities.Message", b =>
                {
                    b.HasOne("UknfCommunicationPlatform.Core.Entities.User", "Recipient")
                        .WithMany()
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UknfCommunicationPlatform.Core.Entities.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Recipient");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("UknfCommunicationPlatform.Core.Entities.Report", b =>
                {
                    b.HasOne("UknfCommunicationPlatform.Core.Entities.Report", "OriginalReport")
                        .WithMany("Corrections")
                        .HasForeignKey("OriginalReportId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("UknfCommunicationPlatform.Core.Entities.User", "SubmittedBy")
                        .WithMany("Reports")
                        .HasForeignKey("SubmittedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UknfCommunicationPlatform.Core.Entities.SupervisedEntity", "SupervisedEntity")
                        .WithMany("Reports")
                        .HasForeignKey("SupervisedEntityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OriginalReport");

                    b.Navigation("SubmittedBy");

                    b.Navigation("SupervisedEntity");
                });

            modelBuilder.Entity("UknfCommunicationPlatform.Core.Entities.User", b =>
                {
                    b.HasOne("UknfCommunicationPlatform.Core.Entities.SupervisedEntity", "SupervisedEntity")
                        .WithMany("Users")
                        .HasForeignKey("SupervisedEntityId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("SupervisedEntity");
                });

            modelBuilder.Entity("UknfCommunicationPlatform.Core.Entities.Report", b =>
                {
                    b.Navigation("Corrections");
                });

            modelBuilder.Entity("UknfCommunicationPlatform.Core.Entities.SupervisedEntity", b =>
                {
                    b.Navigation("Reports");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("UknfCommunicationPlatform.Core.Entities.User", b =>
                {
                    b.Navigation("Reports");
                });
#pragma warning restore 612, 618
        }
    }
}
