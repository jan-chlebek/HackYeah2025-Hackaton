#!/bin/bash
# PostgreSQL Quick Reference Commands

echo "=== PostgreSQL Quick Reference ==="
echo ""

# Database connection info
echo "üìä Database Connection Info:"
echo "  Host: localhost (or 'postgres' in Docker network)"
echo "  Port: 5432"
echo "  Database: uknf_db"
echo "  Username: uknf_user"
echo "  Password: YourStrong@Passw0rd"
echo ""

# Docker commands
echo "üê≥ Docker Commands:"
echo "  # Start all services"
echo "  docker-compose up -d"
echo ""
echo "  # Start only PostgreSQL"
echo "  docker-compose up -d postgres"
echo ""
echo "  # Stop all services"
echo "  docker-compose down"
echo ""
echo "  # Stop and remove volumes (‚ö†Ô∏è  deletes data)"
echo "  docker-compose down -v"
echo ""
echo "  # View PostgreSQL logs"
echo "  docker-compose logs -f postgres"
echo ""
echo "  # Connect to PostgreSQL CLI"
echo "  docker-compose exec postgres psql -U uknf_user -d uknf_db"
echo ""

# EF Core commands
echo "üî® Entity Framework Core Commands:"
echo "  # Navigate to API project first:"
echo "  cd src/Backend/UknfCommunicationPlatform.Api"
echo ""
echo "  # Add migration"
echo "  dotnet ef migrations add <MigrationName> --project ../UknfCommunicationPlatform.Infrastructure"
echo ""
echo "  # Update database"
echo "  dotnet ef database update --project ../UknfCommunicationPlatform.Infrastructure"
echo ""
echo "  # List migrations"
echo "  dotnet ef migrations list --project ../UknfCommunicationPlatform.Infrastructure"
echo ""
echo "  # Remove last migration"
echo "  dotnet ef migrations remove --project ../UknfCommunicationPlatform.Infrastructure"
echo ""
echo "  # Generate SQL script"
echo "  dotnet ef migrations script --project ../UknfCommunicationPlatform.Infrastructure"
echo ""

# PostgreSQL CLI commands
echo "üíª PostgreSQL CLI Commands (inside container):"
echo "  # List databases"
echo "  \\l"
echo ""
echo "  # Connect to database"
echo "  \\c uknf_db"
echo ""
echo "  # List tables"
echo "  \\dt"
echo ""
echo "  # Describe table"
echo "  \\d table_name"
echo ""
echo "  # List users"
echo "  \\du"
echo ""
echo "  # Exit"
echo "  \\q"
echo ""

# Backup and restore
echo "üíæ Backup & Restore:"
echo "  # Backup database"
echo "  docker-compose exec postgres pg_dump -U uknf_user uknf_db > backup.sql"
echo ""
echo "  # Restore database"
echo "  docker-compose exec -T postgres psql -U uknf_user uknf_db < backup.sql"
echo ""

# Troubleshooting
echo "üîç Troubleshooting:"
echo "  # Check if PostgreSQL is running"
echo "  docker-compose ps postgres"
echo ""
echo "  # Check PostgreSQL health"
echo "  docker-compose exec postgres pg_isready -U uknf_user"
echo ""
echo "  # View active connections"
echo "  docker-compose exec postgres psql -U uknf_user -d uknf_db -c 'SELECT * FROM pg_stat_activity;'"
echo ""
